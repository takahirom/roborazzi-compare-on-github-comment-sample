name: Screenshot compare comment

on:
  workflow_run:
    workflows:
      - CompareScreenshot
    types:
      - completed

jobs:
  Comment-CompareScreenshot:
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'

    timeout-minutes: 2

    runs-on: ubuntu-latest

    steps:
      - uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2.27.0
        with:
          name: pr
          run_id: ${{ github.event.workflow_run.id }}
      - id: get-pull-request-number
        name: Get pull request number
        shell: bash
        run: |
          echo "pull_request_number=$(cat NR)" >> $GITHUB_OUTPUT
      - name: main checkout
        id: checkout-main
        uses: actions/checkout@v3
        with:
          ref: main
      - id: switch-companion-branch
        env:
          BRANCH_NAME: companion_${{ github.event.workflow_run.head_branch }}
        run:
          # orphan means it will create no history branch
          git branch -D $BRANCH_NAME || true
          git checkout --orphan $BRANCH_NAME
          git rm -rf .
      - uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2.27.0
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: screenshot-diff
          path: screenshot-diff
      - id: push-screenshot-diff
        env:
          BRANCH_NAME: companion_${{ github.event.workflow_run.head_branch }}
        run: |
          git add "*compare.png"
          git config --global user.name ScreenshotBot
          git commit -m "Add screenshot diff"
          git push origin HEAD:$BRANCH_NAME -f
      - id: generate-diff-reports
        name: Generate diff reports
        env:
          BRANCH_NAME: companion_${{ github.event.workflow_run.head_branch }}
        shell: bash
        run: |
          files=$(find . -type f -name "*_compare.png")
          
          delimiter="$(openssl rand -hex 8)"
          echo "reports<<${delimiter}" >> $GITHUB_OUTPUT
          
          # Create markdown table header
          echo "Snapshot diff report" >> $GITHUB_OUTPUT
          echo "| File name | Image |" >> $GITHUB_OUTPUT
          echo "|-------|-------|" >> $GITHUB_OUTPUT
          
          # Iterate over the files and create table rows
          for file in $files; do
            # Get the file name and insert newlines every 20 characters
            fileName="$(basename $file)" | sed -r 's/(.{20})/\1<br>/g'
            echo "| [$fileName](https://github.com/takahirom/roborazzi-compare-on-github-comment/blob/$BRANCH_NAME/$file) | ![](https://github.com/takahirom/roborazzi-compare-on-github-comment/blob/$BRANCH_NAME/$file?raw=true) |" >> $GITHUB_OUTPUT
          done
          echo "${delimiter}" >> $GITHUB_OUTPUT
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ steps.get-pull-request-number.outputs.pull_request_number }}
          comment-author: 'github-actions[bot]'
          body-includes: Snapshot diff report

      - name: Add or update comment on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ steps.get-pull-request-number.outputs.pull_request_number }}
          body: ${{ steps.generate-diff-reports.outputs.reports }}
          edit-mode: replace

      - name: Cleanup outdated companion branch
        run: |
          # Find outdated companion branches with last commit date
          git branch -r --format="%(refname:lstrip=3)" | grep companion_ | while read branch; do
            last_commit_date=$(git log -1 --format=%cd origin/$branch)
            last_commit_date_timestamp=$(date -d "$last_commit_date" +%s --dateformat="%a %b %e %H:%M:%S %Y %z")
            now_timestamp=$(date +%s)
            # Delete branch if it's older than 1 month
            # if [ $((now_timestamp - last_commit_date_timestamp)) -gt 2592000 ]; then
            # For testing purpose, delete branch if it's older than 2 minutes
            if [ $((now_timestamp - last_commit_date_timestamp)) -gt 120000 ]; then
              # Comment out for demonstration purpose
              echo "Deleting $branch"
              # git push origin --delete $branch
            fi
          done